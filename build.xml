<!--
    10-152-112 Advanced Java
    build.xml for project 2-4
-->

<project default="deploy">
  <property name="user_home" value="${user.home}" />
  <property name="project_home" value="${user.dir}" />
  <property name="tomcat" value="${user_home}/tomcat" />
  <property name="src" value="src"/>
  <property name="project2" value="${src}/java112/project2" />
  <property name="project3" value="${src}/java112/project3" />
  <property name="project4" value="${src}/java112/project4" />
  <property name="labs2" value="${src}/java112/labs2" />
  <property name="labs3" value="${src}/java112/labs3" />
  <property name="labs4" value="${src}/java112/labs4" />
  <property name="dba" value="dba" />
  <property name="employee" value="${src}/java112/employee" />
  <property name="utilities" value="${src}/java112/utilities" />
  <property name="config" value="config"/>
  <property name="build" value="build"/>
  <property name="dist" value="dist"/>
  <property name="lib" value="lib"/>
  <property name="WEB-INF" value="${build}/WEB-INF"/>
  <property name="META-INF" value="${build}/META-INF"/>
  <property name="web_classes" value="${WEB-INF}/classes"/>
  <property name="web_lib" value="${WEB-INF}/lib"/>
  <property name="build.compiler" value="modern"/>
  <property name="static" value="public_html" />
  <property name="analyzer_lib" value="${project_home}/lib/analyzer.jar" />
  <property name="analyzer_tests" value="${project_home}/lib/java112Tests.jar" />
  <property name="lab_tests" value="${project_home}/lib/java112Tests.jar" />
  <property name="lab_lib" value="${project_home}/lib/java112Labs.jar" />
  <property name="junit" value="${project_home}/lib/junit.jar" />
  <property name="hamcrest" value="${project_home}/lib/hamcrest.jar" />
  <property name="java_hamcrest" value="${project_home}/lib/java-hamcrest.jar" />
  <property name="project_1" value="present"/>
  <property name="project_2" value="present"/>
  <property name="project_3" value="present"/>
  <property name="project_4" value="present"/>
  <property name="lab_tests_src" value="${project_home}/src/java112/tests" />

  <path id="classpath">
        <fileset dir="${lib}">
          <include name="*.jar"/>
        </fileset>
  </path>

  <target name="init1">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
    <mkdir dir="${build}/classes"/>
    <mkdir dir="${META-INF}"/>
    <echo message="Initialization for project 1 completed" />
  </target>

  <target name="init2" depends="init1" if="project_2">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${dist}" />
    <mkdir dir="${WEB-INF}" />
    <mkdir dir="${web_classes}" />
    <mkdir dir="${WEB-INF}/lib" />
    <mkdir dir="${config}" />
    <mkdir dir="${static}" />
    <mkdir dir="${static}/images" />
    <mkdir dir="${labs2}" />
    <mkdir dir="${project2}" />
    <mkdir dir="${utilities}" />
    <echo message="Initialization for project 2 completed" />
  </target>

  <target name="init3" depends="init2" if="project_3">
    <tstamp/>

    <mkdir dir="${project3}" />
    <mkdir dir="${labs3}" />
    <echo message="Initialization for project 3 completed" />
  </target>

  <target name="init4" depends="init3" if="project_4">
    <tstamp/>
    <mkdir dir="${employee}" />
    <mkdir dir="${project4}" />
    <mkdir dir="${labs4}" />
    <mkdir dir="${dba}" />
    <echo message="Initialization for project 4 completed" />
  </target>

  <target name="init" depends="init4">
    <tstamp/>
    <echo message="Initialization Complete" />
  </target>

  <target name="clean" description="Delete build and dist">
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>

  <target name="compile_analyzer" depends="init">
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}"
           destdir="${build}/classes"
           classpathref="classpath"
           verbose="false"
           excludes="*.jsp,
                     *.html,
                     *.xml,
                     java112/labs1/**,
                     java112/labs2/**,
                     java112/employee/**,
                     java112/project2/**,
                     java112/project3/**,
                     java112/project4/**,
                     java112/tests/**,
                     java112/demos/**"
           deprecation="on"
           debug="on"
           includeAntRuntime="false" >
       <compilerarg value="-Xlint:unchecked"/>
     </javac>
  </target>

  <target name="compile_labs" depends="init">
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}"
           destdir="${build}/classes"
           classpathref="classpath"
           verbose="false"
           excludes="*.jsp,
                     *.html,
                     *.xml,
                     java112/analyzer/**,
                     java112/tests/**,
                     java112/demos/**,
                     java112/project2/**,
                     java112/project3/**,
                     java112/project4/**
                     "
           deprecation="on"
           debug="on"
           includeAntRuntime="false" />
  </target>

  <target name="compile_demos" depends="init">
      <!-- Compile the java code from ${src} into ${build} -->
      <javac srcdir="${src}"
          destdir="${build}/classes"
          classpathref="classpath"
          verbose="false"
          excludes="*.jsp,
                    *.html,
                    *.xml,
                    java112/analyzer/**,
                    java112/tests/**,
                    java112/labs1/**,
                    java112/labs2/**,
                    java112/project2/**,
                    java112/project3/**,
                    java112/project4/**,
                    "
          deprecation="on"
          debug="on"
          includeAntRuntime="false" />
  </target>

  <target name="build_analyzer" depends="clean, compile_analyzer">
    <jar destfile="${analyzer_lib}">
      <fileset dir="${build}/classes" excludes="${build}/classes/java112/tests/**" />
    </jar>
  </target>

  <target name="build_labs" depends="clean, compile_labs">
    <jar destfile="lib/java112Labs.jar">
      <fileset dir="${build}/classes" excludes="${build}/classes/java112/tests/**" />
    </jar>
  </target>

  <target name="build_demos" depends="clean, compile_demos">
      <jar destfile="lib/java112Demos.jar">
          <fileset dir="${build}/classes"
          excludes="${build}/classes/java112/tests/**" />
      </jar>
  </target>

  <target name="compile_web" depends="init">
    <javac srcdir="${src}"
      destdir="${web_classes}"
      classpathref="classpath"
      verbose="false"
      includes="java112/utilities/**,
                java112/project2/**,
                java112/project3/**,
                java112/project4/**,
                java112/employee/**"
      excludes="*.jsp,
                *.html,
                *.xml,
                java112/analyzer/**,
                java112/labs1/**,
                java112/labs2/**,
                java112/tests/**"
      deprecation="on"
      debug="on"
      includeAntRuntime="false"
    />
  </target>

  <target name="build_web" depends="clean, compile_web">

    <copy todir="${web_classes}">
      <fileset dir="${config}"/>
    </copy>

    <!-- copy the images to the build/images dir-->
    <copy todir="${build}/images">
      <fileset dir="${static}/images"/>
    </copy>

    <!-- copy the JSP pages to the web-app dir-->
    <copy todir="${build}">
      <fileset dir="${static}">
        <include name="**/*.jsp"/>
      </fileset>
    </copy>

    <!-- copy the HTML pages to the web-app dir-->
    <copy todir="${build}">
      <fileset dir="${static}">
        <include name="**/*.html"/>
      </fileset>
    </copy>

    <!-- copy the css to the build/images dir-->
    <copy todir="${build}">
      <fileset dir="${static}">
        <include name="**/*.css"/>
      </fileset>
    </copy>

    <!-- copy the analyzer.jar file to the lib directory -->
    <copy file="${analyzer_lib}" todir="${web_lib}"/>

  </target>

  <target name="dist" depends="build_web">
    <war warfile="${dist}/java112.war"
      webxml="${config}/web.xml"
      basedir="${build}">
    </war>
  </target>

  <target name="deploy" depends="dist">
    <copy file="${dist}/java112.war" todir="${tomcat}/webapps"/>
  </target>

 <!--########################################################################
    |   jdoc - Generates JavaDoc                                               |
    #########################################################################-->
 <target name="jdoc">
   <javadoc packagenames="java112.analyzer.*,
                         java112.labs1.*,
                         java112.demos.*,
                         java112.labs2.*,
                         java112.labs3.*,
                         java112.labs4.*,
                         java112.project2.*,
                         java112.project3.*,
                         java112.project4.*,
                         java112.employee.*,
                         java112.utilities.*
                         "
            sourcepath="${src}"
            classpath="${lib}/servlet-api.jar"
            defaultexcludes="yes"
            destdir="docs/project_api"
            author="true"
            version="true"
            access="private"
            additionalparam="-Xdoclint:all">
   </javadoc>
 </target>

<!--########################################################################
    |   tcdown, tcup, tcbounce - Restarting tomcat                             |
#########################################################################-->
  <target name="tcdown">
    <exec dir="." executable="${tomcat}/bin/shutdown.sh">
    </exec>
  </target>
  <target name="tcup">
    <exec dir="." executable="${tomcat}/bin/startup.sh">
        <env key="CATALINA_TMPDIR" value="${user_home}/analyzerdata/"/>
    </exec>
  </target>
  <target name="tcbounce">
    <antcall target="tcdown" />
    <sleep seconds="4" />
    <antcall target="tcup" />
  </target>

  <target name="compile_jdbc_lab" depends="init">
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}"
      destdir="${build}/classes"
      classpathref="classpath"
      verbose="false"
      excludes="*.jsp,*.html,*.xml,
        java112/labs1/**,
        java112/labs2/**,
        java112/labs3/**,
        java112/project2/**,
        java112/project3/**,
        java112/tests/**,
        java112/employee/**
        java112/analyzer/**"
      deprecation="on"
      debug="on"
      includeAntRuntime="false"
    />
  </target>

  <target name="build_jdbc_lab" depends="clean, compile_jdbc_lab" >
    <jar destfile="lib/jdbc_lab.jar">
      <fileset dir="${build}/classes"
        excludes="${build}/classes/java112/tests/**"
      />
    </jar>
  </target>


<!--  Testing Targets -->

  <target name="build_tests" depends="compile_tests, test_dir_check" if="test_dir_exists">
    <jar destfile="lib/java112Tests.jar">
      <fileset dir="${build}/classes"
               excludes="java112/analyzer/**,
                         java112/labs1/**,
                         java112/labs2/**,
                         java112/labs3/**,
                         java112/labs4/**,
                         java112/employee/**,
                         java112/project3/**,
                         java112/project4/**,
                         java112/utilities/**
                         "
      />
    </jar>
  </target>

  <target name="compile_tests" depends="clean, init">
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}"
    destdir="${build}/classes"
    classpathref="classpath"
    verbose="false"
    excludes="*.jsp,
              *.html,
              *.xml,
              java112/analyzer/**,
              java112/labs1/**,
              java112/labs2/**,
              java112/labs3/**,
              java112/labs4/**,
              java112/employee/**,
              java112/project2/**,
              java112/project3/**,
              java112/project4/**,
              java112/utilities/**,
              "
    deprecation="on"
    debug="on"
    includeAntRuntime="false" />
  </target>

  <target name="run_tests_lab2" depends="build_labs">
    <junit printsummary="yes" fork="yes" haltonfailure="no">
      <classpath>
        <pathelement location="${lab_lib}"/>
        <pathelement location="${lab_tests}" />
        <pathelement location="${hamcrest}" />
        <pathelement location="${java_hamcrest}" />
        <pathelement location="${junit}" />
      </classpath>
      <formatter type="plain"/>
      <test name="java112.tests.Lab2MysteryClassTest"/>
    </junit>
  </target>

  <target name="run_tests_lab3" depends="build_labs">
    <junit printsummary="yes" fork="yes" haltonfailure="no">
      <classpath>
        <pathelement location="${lab_lib}"/>
        <pathelement location="${lab_tests}" />
        <pathelement location="${hamcrest}" />
        <pathelement location="${java_hamcrest}" />
        <pathelement location="${junit}" />
      </classpath>
      <formatter type="plain"/>
      <test name="java112.tests.LabThreeTest"/>
    </junit>
  </target>

  <target name="run_tests_lab4" depends="build_labs">
    <junit printsummary="yes" fork="yes" haltonfailure="no">
      <classpath>
        <pathelement location="${lab_lib}"/>
        <pathelement location="${lab_tests}" />
        <pathelement location="${hamcrest}" />
        <pathelement location="${java_hamcrest}" />
        <pathelement location="${junit}" />
      </classpath>
      <formatter type="plain"/>
      <test name="java112.tests.LabFourTests"/>
    </junit>
  </target>

  <target name="run_tests_lab5" depends="build_labs">
    <junit printsummary="yes" fork="yes" haltonfailure="no">
      <classpath>
        <pathelement location="${lab_lib}"/>
        <pathelement location="${lab_tests}" />
        <pathelement location="${hamcrest}" />
        <pathelement location="${java_hamcrest}" />
        <pathelement location="${junit}" />
      </classpath>
      <formatter type="plain"/>
      <test name="java112.tests.LabFiveTests"/>
    </junit>
  </target>

  <target name="run_tests_lab6" depends="build_labs">
    <junit printsummary="yes" fork="yes" haltonfailure="no">
      <classpath>
        <pathelement location="${lab_lib}"/>
        <pathelement location="${lab_tests}" />
        <pathelement location="${hamcrest}" />
        <pathelement location="${java_hamcrest}" />
        <pathelement location="${junit}" />
      </classpath>
      <formatter type="plain"/>
      <test name="java112.tests.LabSixTests"/>
    </junit>
  </target>

  <target name="run_tests_lab7" depends="build_labs">
    <junit printsummary="yes" fork="yes" haltonfailure="no">
      <classpath>
        <pathelement location="${lab_lib}"/>
        <pathelement location="${lab_tests}" />
        <pathelement location="${hamcrest}" />
        <pathelement location="${java_hamcrest}" />
        <pathelement location="${junit}" />
      </classpath>
      <formatter type="plain"/>
      <test name="java112.tests.LabSevenTests"/>
    </junit>
  </target>

  <target name="run_tests_lab8" depends="build_labs">
    <junit printsummary="yes" fork="yes" haltonfailure="no">
      <classpath>
        <pathelement location="${lab_lib}"/>
        <pathelement location="${lab_tests}" />
        <pathelement location="${hamcrest}" />
        <pathelement location="${java_hamcrest}" />
        <pathelement location="${junit}" />
      </classpath>
      <formatter type="plain"/>
      <test name="java112.tests.LabEightTests"/>
    </junit>
  </target>

  <target name="run_tests_analyzer1" depends="build_analyzer" if="project_1">
    <junit printsummary="yes" fork="yes" haltonfailure="no">
      <classpath>
        <pathelement location="${analyzer_lib}"/>
        <pathelement location="${analyzer_tests}" />
        <pathelement location="${hamcrest}" />
        <pathelement location="${java_hamcrest}" />
        <pathelement location="${junit}" />
      </classpath>
      <formatter type="plain"/>
      <test name="java112.tests.DriverTest"/>
      <test name="java112.tests.FileAnalysisMethodsTest"/>
      <test name="java112.tests.FileSummaryAnalyzerTest"/>
      <test name="java112.tests.FileSummaryAnalyzerOutputTest"/>
      <test name="java112.tests.DistinctTokensAnalyzerProcessTokenTest"/>
      <test name="java112.tests.DistinctTokensAnalyzerOutputTest"/>
    </junit>
  </target>

  <target name="run_tests_analyzer2" depends="run_tests_analyzer1" if="project_2">
    <junit printsummary="yes" fork="yes" haltonfailure="no">
      <classpath>
        <pathelement location="${analyzer_lib}"/>
        <pathelement location="${analyzer_tests}" />
        <pathelement location="${hamcrest}" />
        <pathelement location="${java_hamcrest}" />
        <pathelement location="${junit}" />
      </classpath>
      <formatter type="plain"/>
      <test name="java112.tests.LargestTokensAnalyzerOutputTest" />
      <test name="java112.tests.LargestTokensAnalyzerProcessTokenTest" />
      <test name="java112.tests.DistinctTokenCountsAnalyzerOutputTest" />
      <test name="java112.tests.DistinctTokenCountsAnalyzerProcessTokenTest" />
    </junit>
  </target>

  <target name="run_tests_analyzer3" depends="run_tests_analyzer2" if="project_3">
    <junit printsummary="yes" fork="yes" haltonfailure="no">
      <classpath>
        <pathelement location="${analyzer_lib}"/>
        <pathelement location="${analyzer_tests}" />
        <pathelement location="${hamcrest}" />
        <pathelement location="${java_hamcrest}" />
        <pathelement location="${junit}" />
        <pathelement location="${config}" />
      </classpath>
      <formatter type="plain"/>
      <test name="java112.tests.TokenLengthsAnalyzerProcessTokenTest" />
      <test name="java112.tests.TokenLengthsAnalyzerOutputTest" />
      <test name="java112.tests.TokenLocationSearchAnalyzerProcessTokenTest" />
      <test name="java112.tests.TokenLocationSearchAnalyzerOutputTest" />
    </junit>
  </target>

  <target name="run_tests_analyzer" depends="build_analyzer, run_tests_analyzer3" >
    <echo message="Analyzer Tests Completed"/>
  </target>

  <target name="test_dir_check">
    <condition property="test_dir_exists">
      <available file="${lab_tests_src}" type="dir"/>
    </condition>
  </target>
</project>
